name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches: [  "main" ]

  


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: hiransanjeewa/portfolio
  EC2_INSTANCE_IP:  54.91.187.60
  SSH_USERNAME: ubuntu
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update

                 
          sudo apt-get install -y docker-compose


        #sudo apt-get install -y docker.io


      - name: Build and push Docker images
        run: |
          docker-compose build
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker-compose push

      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: 3.89.131.139
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Pull Docker Compose images on EC2 instance
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker-compose pull"

      - name: Deploy Docker Compose on EC2 instance
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker-compose up -d"


        #  # Pull the Docker Hub images
        #  sudo docker pull hiransanjeewa/portfolio_client:latest
        #  sudo docker pull hiransanjeewa/portfolio_server:latest
        #  # Add more pull commands as needed
         
        
        #  # Start the containers
        
        #  sudo docker stop my-client-container
        #  sudo docker stop my-server-container
        #  sudo docker rm my-client-container
        #  sudo docker rm my-server-container
         


        #  sudo docker run -d -p 80:3000 --name=my-client-container hiransanjeewa/portfolio_client:latest

        #  sudo docker run -d -p 8080:8080 --name=my-server-container hiransanjeewa/portfolio_server:latest
        #  sudo docker image prune
        #  sudo docker container prune
        
        
          
    

   
         
         
       

